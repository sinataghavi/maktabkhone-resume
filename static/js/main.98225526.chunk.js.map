{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesAnaIcons.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","DownIcon","onClick","style","display","flexDirection","alignItems","marginBottom","transform","maxWidth","src","icon","TitelsAndIcons","state","color","chengeColor","_this","setState","_this2","src_components_Fullpage","onMouseOver","onMouseLeave","data","title","subtitle","Object","keys","links","map","key","react_social_icons","url","modules","name","activeClass","to","spy","smooth","offset","duration","delay","components_DownIcon","icons","down","console","log","AboutSection","sections","items","content","SkillCard","skill","image","SkillSection","eachskill","components_SkillCard","App","TitlesAnaIcons","sections_AboutSection","sections_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98225526.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\";\r\n\r\nclass Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className={`fullpage ${this.props.className || \"\"}`}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Fullpage;\r\n","import React, { Component } from \"react\";\r\n\r\nconst DownIcon = (props) => {\r\n  return (\r\n    <div\r\n    onClick={props.onClick}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"-34px\",\r\n        transform: \"translateY(-45px)\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          maxWidth: \"30px\"\r\n        }}\r\n      >\r\n        <img src={props.icon} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DownIcon\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage.js\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport * as Scroll from \"react-scroll\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nclass TitelsAndIcons extends Component {\r\n  state = {\r\n    color: \"white\"\r\n  };\r\n  chengeColor = () => {\r\n    this.setState({\r\n      color: this.state.color === \"white\" ? \"yellow\" : \"white\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\">\r\n\r\n          <h1\r\n            className=\"title\"\r\n            style={{\r\n              color: this.state.color\r\n            }}\r\n            onMouseOver={() => {\r\n              this.chengeColor();\r\n            }}\r\n            onMouseLeave={() => {\r\n              this.chengeColor();\r\n            }}\r\n          >\r\n            {data.title}\r\n          </h1>\r\n          <div className=\"subtitle\">\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map(key => {\r\n              return (\r\n                <div className=\"icons\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n\r\n        <Element name=\"about\" className=\"element\">\r\n         \r\n        </Element>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={500}\r\n          delay={0}\r\n        >\r\n        <DownIcon\r\n          icon={data.icons.down}\r\n          onClick={() => console.log(\"im working\")}\r\n        />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TitelsAndIcons;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage.js\";\r\nimport data from '../data.json'\r\n\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"fullpage second\">\r\n      <h3>{data.sections[0].title}</h3>\r\n      <p>{data.sections[0].items[0].content}</p>\r\n      <p>{data.sections[0].items[1].content}</p>\r\n      <p>{data.sections[0].items[1].content}</p>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport \"./Fullpage.css\";\r\n\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n        <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image} />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h4> {skill.content.title}</h4>\r\n        </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\nexport default SkillCard ;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage.js\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport data from '../data.json'\r\n\r\n\r\nclass SkillSection extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"fullpage third\">\r\n        <h3>{data.sections[1].title}</h3>\r\n        <div className=\"cards-wrapper\">\r\n          {data.sections[1].items.map(eachskill => {\r\n            return (\r\n             <SkillCard skill={eachskill} />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SkillSection;","import React, { Component } from \"react\";\n\nimport \"./App.css\";\n\nimport TitelsAndIcons from \"./sections/TitlesAnaIcons\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"navigation\" />\n\n        <TitelsAndIcons />\n        <AboutSection />\n        <SkillSection />\n \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}